	; ARGS: somefunc1 somefunc2 multi_scalar.s
	SCALAR_HEADER
	somefunc1:
	.insn i 0x77, 0, x0, a0, 0x401
	BEFORE_VECTOR_EPOCH
	# trillium: scalar stack cleanup begin
	SCALAR_STACK_CLEANUP
	# trillium: scalar stack cleanup end
.L1:
	.insn uj 0x2b, x0, .L14
.L2:
	SCALAR_AFTER_DEVEC
	ret
	# trillium: auxiliary blocks begin
.trillium_anon_aux_bb:
	SCALAR_AFTER_RETURN
.L4:
	AN_AUXILIARY_BLOCK
.L6:
	ANOTHER_AUXILIARY_BLOCK
	# trillium: auxiliary blocks end
	# trillium: vector vissue blocks begin
.L3:  # somefunc1_block_one vissue block
	#prepended trillium_init block here (See docs for more info)
	#trillium_init begin
	TRILLIUM_INIT_BLOCK
	#trillium_init end
	VECTOR_BLOCK_ONE
	.insn i 0x1b, 0x7, x0, x0, 0
.L5:  # somefunc1_block_two vissue block
	VECTOR_BLOCK_TWO
	.insn i 0x1b, 0x7, x0, x0, 0
	# trillium: vector vissue blocks end
	# trillium: footer begin
	.size whatever
	SCALAR_FOOTER
	# trillium: footer end
somefunc2:
	.insn i 0x77, 0, x0, a0, 0x401
	BEFORE_VECTOR_EPOCH
	# trillium: scalar stack cleanup begin
	SCALAR_STACK_CLEANUP
	# trillium: scalar stack cleanup end
.L1:
	.insn uj 0x2b, x0, .L14
.L2:
	SCALAR_AFTER_DEVEC
	ret
	# trillium: auxiliary blocks begin
.trillium_anon_aux_bb:
	SCALAR_AFTER_RETURN
.L4:
	AN_AUXILIARY_BLOCK
.L6:
	ANOTHER_AUXILIARY_BLOCK
	# trillium: auxiliary blocks end
	# trillium: vector vissue blocks begin
.L3:  # somefunc1_block_one vissue block
	#prepended trillium_init block here (See docs for more info)
	#trillium_init begin
	TRILLIUM_INIT_BLOCK
	#trillium_init end
	VECTOR_BLOCK_ONE
	.insn i 0x1b, 0x7, x0, x0, 0
.L5:  # somefunc1_block_two vissue block
	VECTOR_BLOCK_TWO
	.insn i 0x1b, 0x7, x0, x0, 0
	# trillium: vector vissue blocks end
	# trillium: footer begin
	.size whatever
	SCALAR_FOOTER
	# trillium: footer end
        .comm whatever
        END_STUFF
